View(iris)
unique(iris$Species)
install.packages(c("GGally", "ggplot2"))
library(GGally)
ggpairs(iris, mapping=ggplot2::aes(colour = Species))
install.packages("shiny")
install.packages("leaflet")
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
leafletOutput("mymap"),
p(),
actionButton("recalc", "New points"),
p(),
textOutput("coordinates")
)
server <- function(input, output, session) {
points <- eventReactive(input$recalc, {
points = cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
output$coordinates <- renderText({
points
})
return(points)
}, ignoreNULL = FALSE)
observeEvent(input$Map_shape_click, { # update the location selectInput on map clicks
output$coordinates <- renderText({
"You have selected this"
})
})
output$mymap <- renderLeaflet({
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addMarkers(data = points())
})
}
shinyApp(ui, server)
install.packages("choroplethr")
install.packages("choroplethrMaps")
state_choropleth(df_pop_state)
library(choroplethr)
library(choroplethrMaps)
state_choropleth(df_pop_state)
data("df_pop_state")
state_choropleth(df_pop_state)
install.packages('tigris')
install.packages("tigris")
install.packages('tidycensus')
state_choropleth(df_pop_state, num_colors = 1)
library(choroplethr)
library(choroplethrMaps)
data("df_pop_state")
state_choropleth(df_pop_state, num_colors = 1)
library(tidycensus)
library(tidyverse)
updateR()
library(tidycensus)
library(tidyverse)
orange <- get_acs(state = "CA", county = "Orange", geography = "tract",
variables = "B19013_001", geometry = TRUE)
census_api_key("7c33c66dfe0a502d83397fee2b4f853e70a34209")
census_api_key("7c33c66dfe0a502d83397fee2b4f853e70a34209", install = TRUE)
library(tidycensus)
library(tidyverse)
orange <- get_acs(state = "CA", county = "Orange", geography = "tract",
variables = "B19013_001", geometry = TRUE)
census_api_key("7c33c66dfe0a502d83397fee2b4f853e70a34209")
orange <- get_acs(state = "CA", county = "Orange", geography = "tract",
variables = "B19013_001", geometry = TRUE)
census_api_key("7c33c66dfe0a502d83397fee2b4f853e70a34209")
library(tidycensus)
library(tidyverse)
options(tigris_use_cache = TRUE)
census_api_key("7c33c66dfe0a502d83397fee2b4f853e70a34209")
orange <- get_acs(state = "CA", county = "Orange", geography = "tract",
variables = "B19013_001", geometry = TRUE)
orange %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
coord_sf(crs = 26911) +
scale_fill_viridis_c(option = "magma")
install.packages("mapview")
v18 <- load_variables(2018, "acs5", cache = TRUE)
library(mapview)
mapview(orange, zcol = "estimate", legeng = TRUE)
orange <- get_acs(state = "CA", county = "Orange", geography = "tract",
variables = "B02015_012", geometry = TRUE)
orange %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
coord_sf(crs = 26911) +
scale_fill_viridis_c(option = "magma")
mapview(orange, zcol = "estimate", legeng = TRUE)
shiny::runApp('Desktop/PC - La Habra')
runApp('Desktop/PC - La Habra')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='devinbarkey', token='D8F70A2DA5E0A701C15A50B1F1B864A8', secret='jO7JbfoKtWYO1qSmgTe66s7JR6Oio7eh9TKeUPpq')
library(rsconnect)
rsconnect::deployApp('/Users/devinbarkey/Desktop/PC - La Habra')
shiny::runApp('Documents/GitHub/devinjbarkey.github.io/PC for La Habra')
runApp()
runApp('Documents/GitHub/devinjbarkey.github.io/PC for La Habra')
source('~/Desktop/PC - La Habra/Animated Plot.R')
source('~/Desktop/PC - La Habra/Animated Plot.R', echo=TRUE)
View(data)
ggplotly(p)
ggplotly(p)
ggplot(data, aes(x = date, y = cum_cases, frame = date)) + geom_area(fill = 'red') + labs(x = 'Date', y = 'Cumulative Cases', title = "Cumulative Reported COVID-19 Cases in La Habra") + transition_reveal(data$date)
ggplot(data, aes(x = date, y = cum_cases, frame = date)) + geom_area(fill = 'red') + labs(x = 'Date', y = 'Cumulative Cases', title = "Cumulative Reported COVID-19 Cases in La Habra")
ggplot(data, aes(x = date, y = cum_cases, frame = date)) + geom_area(fill = 'red') + labs(x = 'Date', y = 'Cumulative Cases', title = "Cumulative Reported COVID-19 Cases in La Habra")
ggplot(data, aes(x = date, y = cases)) + geom_area(fill = 'red') + labs(x = 'Date', y = 'Cases', title = "Daily Reported COVID-19 Cases in La Habra")
source('~/Desktop/PC - La Habra/Animated Plot.R', echo=TRUE)
View(data)
source('~/Desktop/PC - La Habra/Animated Plot.R', echo=TRUE)
View(data)
runApp('Documents/GitHub/devinjbarkey.github.io/PC for La Habra')
runApp('Documents/GitHub/devinjbarkey.github.io/PC for La Habra')
?rename
View(data)
View(data)
runApp('Documents/GitHub/devinjbarkey.github.io/PC for La Habra')
deployApp()
library(rsconnect)
deployApp()
setwd("~/Documents/GitHub/devinjbarkey.github.io/PC for La Habra")
deployApp()
